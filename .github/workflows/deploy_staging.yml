name: Deploy frontend to staging

env:
  APP_NAME: preql-frontend
  ENV_NAME: Preqlfrontend-staging
  S3_BUCKET: preql-frontend-staging
  AWS_REGION: us-east-1
  AWS_PLATFORM: Node.js
  EC2_SSH_KEY_PAIR: preql-backend-key
  PIPELINE_ID: ${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  API_URL: https://api-staging.preql.io/

on:
  push:
    branches: [main]

jobs:
  create_ebs_version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set Up Environment Variables
        run: |
          chmod +x ./scripts/setup_env.sh
          ./scripts/setup_env.sh
        shell: bash
      - name: Show .env file content
        run: |
          pwd
          ls -la
          cat .env
      - name: Build Application
        uses: actions/setup-node@v2
        with:
          node-version: '16.15.0'
      - run: npm ci
      - run: npm run build
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - run: |
          AWS_VERSION_LABEL=${{env.APP_NAME}}-${{env.PIPELINE_ID}}
          echo "Creating Source Bundle"
          zip -r ${{env.APP_NAME}}.zip ./ -x node_modules/\*
          S3_KEY="$AWS_VERSION_LABEL.zip"
          echo "Uploading Source Bundle to S3 bucket"
          aws s3 cp ${{env.APP_NAME}}.zip s3://${{env.S3_BUCKET}}/${S3_KEY} --region ${{env.AWS_REGION}}
          echo "Creating Elastic Beanstalk Application version"
          aws elasticbeanstalk create-application-version --application-name ${{env.APP_NAME}} --version-label $AWS_VERSION_LABEL --region ${{env.AWS_REGION}} --source-bundle S3Bucket=${{env.S3_BUCKET}},S3Key=${S3_KEY} --auto-create-application
  deploy_aws:
    needs: [create_ebs_version]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8 (needed for eb cli)
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - run: |
          AWS_VERSION_LABEL=${{env.APP_NAME}}-${{env.PIPELINE_ID}}
          echo "Installing Elastic Beanstalk Cli"
          python -m pip install --upgrade pip
          pip install awsebcli --upgrade
          eb --version
          echo "Initializing Deployment"
          eb init -i ${{env.APP_NAME}} -p ${{env.AWS_PLATFORM}} -k ${{env.EC2_SSH_KEY_PAIR}} --region ${{env.AWS_REGION}}
          eb deploy ${{env.ENV_NAME}} --version ${AWS_VERSION_LABEL} --timeout 20
          echo "Deployment Successful"
